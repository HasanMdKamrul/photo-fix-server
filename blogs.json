[
  {
    "question": "Difference between SQL and NoSQL",
    "answer": "First of all, there are many differences between SQL and NoSQL. SQL is a relational database, while NoSQL is a non-relational database. SQL is a table-based database, while NoSQL is a document-based, key-value pairs, graph databases or wide-column stores. SQL databases are vertically scalable, while NoSQL databases are horizontally scalable. SQL databases uses SQL ( structured query language ) for defining and manipulating the data, which is very powerful. In NoSQL, queries are focused on collection of documents. For example, MongoDB supports dynamic schema design. MongoDB is a document database in which one collection holds different documents."
  },
  {
    "question": "What is JWT, and how does it work?",
    "answer": "JWT stands for JSON Web Token. It is an open standard ( RFC 7519 ) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed. JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA or ECDSA. JWT can be stored as the browser cookie or can be stored as the localstorage. Usually browser cookies are user because the localStorage stored cookie can be intercepted by using js."
  },
  {
    "question": "What is the difference between javascript and NodeJS?",
    "answer": "First of all, javaScript is a scripting language that runs on the client-side. Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js is an event-based, non-blocking, asynchronous I/O runtime that uses Google's V8 JavaScript engine and libuv library. Due to the node js now server-side javascript is possible."
  },
  {
    "question": "How does NodeJS handle multiple requests at the same time?",
    "answer": "Although, Node.js is a single-threaded application, but it can support concurrency via the concept of event and callbacks. Every API of Node.js is asynchronous and being single-threaded, they use async function calls to maintain concurrency. Node uses observer pattern like event-loop. Node thread keeps an event loop and whenever a task gets completed, it fires the corresponding event which signals the event-listener function to execute."
  }
]
